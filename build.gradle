/*
 * Copyright 2010 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 import org.springframework.build.Version

// -----------------------------------------------------------------------------
// Main gradle build file for Spring Social Instagram
// @author Matt Wright
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// Configuration for the root project
// -----------------------------------------------------------------------------
description = 'Spring Social Instagram'

apply plugin: 'base'
apply plugin: 'idea'

def buildSrcDir = "$rootDir/buildSrc"
apply from: "$buildSrcDir/wrapper.gradle"
apply from: "$buildSrcDir/maven-root-pom.gradle"

// -----------------------------------------------------------------------------
// Configuration for all projects including this one (the root project)
//
// @see settings.gradle for list of all subprojects
// -----------------------------------------------------------------------------
allprojects {
    // group will translate to groupId during pom generation and deployment
    group = 'org.springframework.social'

    // version will be used in maven pom generation as well as determining
    // where artifacts should be deployed, based on release type of snapshot,
    // milestone or release.
    // @see org.springframework.build.Version under buildSrc/ for more info
    // @see gradle.properties for the declaration of this property.
    version = new Version(springSocialInstagramVersion)

    // default set of maven repositories to be used when resolving dependencies
    repositories {
        maven { url 'http://repo.spring.io/release' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/snapshot' }
        mavenCentral()
    }
}


// -----------------------------------------------------------------------------
// Create collections of subprojects - each will receive their own configuration
// - all subprojects that start with spring-social-* are 'java projects'
// - documentation-related subprojects are not collected here
//
// @see configure(*) sections below
// -----------------------------------------------------------------------------

ext.javaprojects = subprojects.findAll { project ->
    project.path.startsWith(':spring-social-')
}

// -----------------------------------------------------------------------------
// Configuration for all java subprojects
// -----------------------------------------------------------------------------
configure(javaprojects) {

    apply plugin: 'java' // tasks for conventional java lifecycle
    apply plugin: 'maven' // `gradle install` to push jars to local .m2 cache
    apply plugin: 'eclipse' // `gradle eclipse` to generate .classpath/.project
    apply plugin: 'idea' // `gradle idea` to generate .ipr/.iml

    ext {
        // set up dedicated directories for jars and source jars.
        // this makes it easier when putting together the distribution
        libsBinDir = new File(libsDir, 'bin')
        libsSrcDir = new File(libsDir, 'src')
        
        springSocialVersion = '1.1.0.M4'
        springVersion = '4.0.1.RELEASE'
        jacksonVersion = '2.2.2'
        junitVersion = '4.11'
        mockitoVersion = '1.9.5'
        springVersion = '4.0.1.RELEASE'
    }
    
    // add tasks for creating source jars and generating poms etc
    apply from: "$buildSrcDir/maven-deployment.gradle"

    // add tasks for finding and publishing .xsd files
    apply from: "$buildSrcDir/schema-publication.gradle"

    sourceSets {
        main {
            resources {
                srcDirs = ['src/main/java']
            }
        }
        test {
            resources {
                srcDirs = ['src/test/java']
            }
        }
    }

    // dependencies that are common across all java projects
    dependencies {
        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
        testCompile "org.springframework:spring-test:$springVersion"
    }

    // enable all compiler warnings (GRADLE-1077)
    [compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:all']

    // generate .classpath files without GRADLE_CACHE variable (GRADLE-1079)
    eclipse.pathVariables = [:]
}


// -----------------------------------------------------------------------------
// Configuration for each individual core java subproject
//
// @see configure(javaprojects) above for general config
// -----------------------------------------------------------------------------

project('spring-social-instagram') {
    description = 'Instagram API'
    dependencies {
        compile "org.springframework.social:spring-social-core:$springSocialVersion"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    }
}

// -----------------------------------------------------------------------------
// Configuration for the docs subproject
// -----------------------------------------------------------------------------
project('docs') {
    apply plugin: 'base'
    task api(type: Javadoc) {
        source javaprojects.collect { project ->
            project.sourceSets.main.allJava
        }
        classpath = files(javaprojects.collect { project ->
            project.sourceSets.main.compileClasspath
        })
        destinationDir = file("build/api")
    }
}

apply from: "$buildSrcDir/dist.gradle"
apply from: "$buildSrcDir/checks.gradle"
